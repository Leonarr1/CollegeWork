


ARM Macro Assembler    Page 1 


    1 00000000                 AREA             Anagram, CODE, READONLY
    2 00000000                 IMPORT           main
    3 00000000                 EXPORT           start
    4 00000000         
    5 00000000         start
    6 00000000 E59F10D0        LDR              R1, =stringA
    7 00000004 E59F20D0        LDR              R2, =stringB
    8 00000008 E3A08009        LDR              R8, =0x9
    9 0000000C E3A05000        LDR              R5, =0
   10 00000010 E3A06000        LDR              R6, =0
   11 00000014 E3A07000        LDR              R7, =0
   12 00000018         
   13 00000018         lengthA
   14 00000018 E7D13005        LDRB             R3, [R1, R5] ;while(CharA != nu
                                                            ll)
   15 0000001C E3530000        CMP              R3, #0      ;{
   16 00000020 0A000004        BEQ              endLengthA  ; if(CharA < 'A')
   17 00000024 E3530041        CMP              R3, #'A'    ; {
   18 00000028 3A000000        BLO              notCharA    ;  lengthACount =+ 
                                                            1;
   19 0000002C E2866001        ADD              R6 , R6, #1 ; }
   20 00000030         notCharA                             ; offset =+ 1;
   21 00000030 E2855001        ADD              R5, R5, #1  ;} 
   22 00000034 EAFFFFF7        B                lengthA     ;
   23 00000038         endLengthA                           ;
   24 00000038 E3A05000        MOV              R5, #0      ;offset = o;
   25 0000003C         
   26 0000003C         lengthB                              ; // repeats the pr
                                                            ocess for stringB
   27 0000003C E7D23005        LDRB             R3, [R2, R5]
   28 00000040 E3530000        CMP              R3, #0
   29 00000044 0A000004        BEQ              endLengthB
   30 00000048 E3530041        CMP              R3, #'A'
   31 0000004C 3A000000        BLO              notCharB
   32 00000050 E2877001        ADD              R7 , R7, #1
   33 00000054         notCharB
   34 00000054 E2855001        ADD              R5, R5, #1
   35 00000058 EAFFFFF7        B                lengthB
   36 0000005C         endLengthB
   37 0000005C         
   38 0000005C E1560007        CMP              R6, R7      ; if(lengthACount !
                                                            = lengthBCount)
   39 00000060 1A000018        BNE              endScan     ; endScan
   40 00000064         
   41 00000064         while
   42 00000064 E5D13000        LDRB             R3,[R1]     ; if(charA != upper
                                                            Case)
   43 00000068 E3530061        CMP              R3, #'a'    ;{ 
   44 0000006C 3A000002        BLO              notLowerCaseA ; charA = charA -
                                                             0x20;  
   45 00000070 E353007A        CMP              R3, #'z'    ;} 
   46 00000074 8A000000        BHI              notLowerCaseA ;
   47 00000078 E2433020        SUB              R3, R3, #0x20 ;
   48 0000007C         notLowerCaseA
   49 0000007C E3530000        CMP              R3, #0      ;while (charA == nu
                                                            ll) 
   50 00000080 0A000012        BEQ              endwhile    ;{
   51 00000084 E3A05000        MOV              R5, #0      ; end program
   52 00000088         scan                                 ;



ARM Macro Assembler    Page 2 


   53 00000088 E7D24005        LDRB             R4,[R2, R5] ; if(charB != upper
                                                            Case)
   54 0000008C E3540061        CMP              R4, #'a'    ; {   
   55 00000090 3A000002        BLO              notLowerCaseB ;  charB = charB 
                                                            - 0x20;
   56 00000094 E354007A        CMP              R4, #'z'    ; } 
   57 00000098 8A000000        BHI              notLowerCaseB ;
   58 0000009C E2444020        SUB              R4, R4, #0x20
   59 000000A0         notLowerCaseB
   60 000000A0 E3540000        CMP              R4, #0      ; if(charB == null)
                                                            
   61 000000A4 0A000007        BEQ              endScan     ;  endScan
   62 000000A8 E1530004        CMP              R3, R4      ; if(charB == charA
                                                            )
   63 000000AC 0A000001        BEQ              pair        ; {
   64 000000B0 E2855001        ADD              R5, R5, #1  ;  CharA = null ; /
                                                            /cross-out method 
   65 000000B4 EAFFFFF3        B                scan        ;  CharB = null ;
   66 000000B8         ;  CharA Address =+ 1 ;
   67 000000B8         pair                                 ; }
   68 000000B8 E5C18000        STRB             R8, [R1]    ; else
   69 000000BC E7C28005        STRB             R8, [R2, R5] ; {
   70 000000C0 E2811001        ADD              R1, R1, #1  ;  CharB Address =+
                                                             1 ;
   71 000000C4 EAFFFFE6        B                while       ; }
   72 000000C8         ;}
   73 000000C8         endScan
   74 000000C8 E3A00000        MOV              R0, #0
   75 000000CC EA000000        B                stop
   76 000000D0         
   77 000000D0         endwhile
   78 000000D0 E3A00001        MOV              R0, #1
   79 000000D4         
   80 000000D4 EAFFFFFE 
                       stop    B                stop
   81 000000D8         
   82 000000D8 00000000 
              00000000         AREA             TestData, DATA, READWRITE
   83 00000000         
   84 00000000 49 20 54 
              48 49 4E 
              4B 20 74 
              68 65 72 
              65 66 6F 
              72 65 20 
              49 20 41 
              4D 2E 00 stringA DCB              "I THINK therefore I AM.",0 ; H
                                                            andles phrase anagr
                                                            ams with different 
                                                            cases
   85 00000018 49 20 46 
              45 41 52 
              20 74 6F 
              20 74 68 
              69 6E 6B 
              20 49 27 
              6D 20 48 
              45 52 45 
              2E 00    stringB DCB              "I FEAR to think I'm HERE.",0



ARM Macro Assembler    Page 3 


   86 00000032         
   87 00000032                 END
Command Line: --debug --xref --apcs=interwork --depend=.\anagram.d -o.\anagram.
o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\Inc\Philips 
--predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --predefine="NO_CLO
CK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM_INTVEC SETA
 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list=.\anagram.l
st Anagram.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

Anagram 00000000

Symbol: Anagram
   Definitions
      At line 1 in file Anagram.s
   Uses
      None
Comment: Anagram unused
endLengthA 00000038

Symbol: endLengthA
   Definitions
      At line 23 in file Anagram.s
   Uses
      At line 16 in file Anagram.s
Comment: endLengthA used once
endLengthB 0000005C

Symbol: endLengthB
   Definitions
      At line 36 in file Anagram.s
   Uses
      At line 29 in file Anagram.s
Comment: endLengthB used once
endScan 000000C8

Symbol: endScan
   Definitions
      At line 73 in file Anagram.s
   Uses
      At line 39 in file Anagram.s
      At line 61 in file Anagram.s

endwhile 000000D0

Symbol: endwhile
   Definitions
      At line 77 in file Anagram.s
   Uses
      At line 50 in file Anagram.s
Comment: endwhile used once
lengthA 00000018

Symbol: lengthA
   Definitions
      At line 13 in file Anagram.s
   Uses
      At line 22 in file Anagram.s
Comment: lengthA used once
lengthB 0000003C

Symbol: lengthB
   Definitions
      At line 26 in file Anagram.s
   Uses
      At line 35 in file Anagram.s
Comment: lengthB used once
notCharA 00000030




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: notCharA
   Definitions
      At line 20 in file Anagram.s
   Uses
      At line 18 in file Anagram.s
Comment: notCharA used once
notCharB 00000054

Symbol: notCharB
   Definitions
      At line 33 in file Anagram.s
   Uses
      At line 31 in file Anagram.s
Comment: notCharB used once
notLowerCaseA 0000007C

Symbol: notLowerCaseA
   Definitions
      At line 48 in file Anagram.s
   Uses
      At line 44 in file Anagram.s
      At line 46 in file Anagram.s

notLowerCaseB 000000A0

Symbol: notLowerCaseB
   Definitions
      At line 59 in file Anagram.s
   Uses
      At line 55 in file Anagram.s
      At line 57 in file Anagram.s

pair 000000B8

Symbol: pair
   Definitions
      At line 67 in file Anagram.s
   Uses
      At line 63 in file Anagram.s
Comment: pair used once
scan 00000088

Symbol: scan
   Definitions
      At line 52 in file Anagram.s
   Uses
      At line 65 in file Anagram.s
Comment: scan used once
start 00000000

Symbol: start
   Definitions
      At line 5 in file Anagram.s
   Uses
      At line 3 in file Anagram.s
Comment: start used once
stop 000000D4

Symbol: stop



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 80 in file Anagram.s
   Uses
      At line 75 in file Anagram.s
      At line 80 in file Anagram.s

while 00000064

Symbol: while
   Definitions
      At line 41 in file Anagram.s
   Uses
      At line 71 in file Anagram.s
Comment: while used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

TestData 00000000

Symbol: TestData
   Definitions
      At line 82 in file Anagram.s
   Uses
      None
Comment: TestData unused
stringA 00000000

Symbol: stringA
   Definitions
      At line 84 in file Anagram.s
   Uses
      At line 6 in file Anagram.s
Comment: stringA used once
stringB 00000018

Symbol: stringB
   Definitions
      At line 85 in file Anagram.s
   Uses
      At line 7 in file Anagram.s
Comment: stringB used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

main 00000000

Symbol: main
   Definitions
      At line 2 in file Anagram.s
   Uses
      None
Comment: main unused
1 symbol
359 symbols in table
