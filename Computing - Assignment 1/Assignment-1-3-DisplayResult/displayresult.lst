


ARM Macro Assembler    Page 1 


    1 00000000         
    2 00000000                 AREA             DisplayResult, CODE, READONLY
    3 00000000                 IMPORT           main
    4 00000000                 IMPORT           getkey
    5 00000000                 IMPORT           sendchar
    6 00000000                 IMPORT           fputs
    7 00000000                 EXPORT           start
    8 00000000                 PRESERVE8
    9 00000000         
   10 00000000         start
   11 00000000         
   12 00000000 E59F0190        LDR              R0,=hi      ; load opening stri
                                                            ng
   13 00000004 EBFFFFFE        BL               fputs       ; output string to 
                                                            console
   14 00000008         
   15 00000008 E3A00000        MOV              R0,#0       ; intialise values 
                                                            
   16 0000000C E3A04000        MOV              R4,#0       ;
   17 00000010 E3A05000        MOV              R5,#0       ;
   18 00000014 E3A0600A        MOV              R6,#0xA     ;
   19 00000018 E3A08000        MOV              R8,#0       ; count
   20 0000001C E3A09000        MOV              R9,#0       ; sum 
   21 00000020 E3E0A000        MOV              R10,#0xFFFFFFFF ; min
   22 00000024 E3A0B000        MOV              R11,#0x0    ; max
   23 00000028 E3A0C000        MOV              R12,#0      ; mean
   24 0000002C         
   25 0000002C         
   26 0000002C         read
   27 0000002C E3500020        CMP              R0,#0x20    ; if(lastInput = sp
                                                            ace)
   28 00000030 0A000005        BEQ              secondSpace ; branch beyond sto
                                                            re values
   29 00000034 EBFFFFFE        BL               getkey      ; read key from con
                                                            sole
   30 00000038 E350000D        CMP              R0,#0x0D    ; while (key != CR
   31 0000003C 0A000010        BEQ              storeNum    ;
   32 00000040 E3500020        CMP              R0,#0x20    ; AND key != Space)
                                                            
   33 00000044 0A00000E        BEQ              storeNum    ;
   34 00000048 EA000002        B                validInput  ;
   35 0000004C         
   36 0000004C         secondSpace                          ;
   37 0000004C EBFFFFFE        BL               getkey      ; if(key = 'esc')
   38 00000050 E350001B        CMP              R0,#0x1B    ;
   39 00000054 0A00001E        BEQ              meanDisplay ; end program and d
                                                            isplay mean
   40 00000058         validInput
   41 00000058 E3500039        CMP              R0,#0x39    ;  if (key isDigit)
                                                            
   42 0000005C CAFFFFF2        BGT              read        ;  //i.e ASCII code
                                                            s are from 0x30 to 
                                                            0x39 inclusive
   43 00000060 E3500030        CMP              R0,#0x30    ; 
   44 00000064 BAFFFFF0        BLT              read        ; {    
   45 00000068 EBFFFFFE        BL               sendchar    ;   echo key back t
                                                            o console
   46 0000006C         
   47 0000006C E3A07030        MOV              R7,#0x30    ;



ARM Macro Assembler    Page 2 


   48 00000070 E1A04000        MOV              R4,R0       ;  store R0 -> R4
   49 00000074 E0674004        RSB              R4,R7,R4    ;  changes from ASC
                                                            II code to value 
   50 00000078 E0050596        MUL              R5,R6,R5    ;   multiplies the 
                                                            value by ten if the
                                                            re is more than one
                                                             digit
   51 0000007C E0855004        ADD              R5,R5,R4    ;  adds the newest 
                                                            value to the multip
                                                            lied value 
   52 00000080         ; }
   53 00000080         ; Final value stored in R5
   54 00000080 EAFFFFE9        B                read
   55 00000084         
   56 00000084         storeNum
   57 00000084 EBFFFFFE        BL               sendchar
   58 00000088         
   59 00000088 E2888001        ADD              R8,R8,#1    ; counter stored in
                                                             R8 
   60 0000008C E0899005        ADD              R9,R9,R5    ; sum stored in R9
   61 00000090         
   62 00000090 E3580001        CMP              R8,#1       ;if(count=1)
   63 00000094 1A000001        BNE              notFirst    ;{
   64 00000098 E1A0A005        MOV              R10,R5      ;min = input
   65 0000009C E1A0B005        MOV              R11,R5      ;max = input
   66 000000A0         notFirst                             ;} 
   67 000000A0         
   68 000000A0 E155000A        CMP              R5,R10      ;if(R5<min)
   69 000000A4 3A000001        BLO              newMin      ;{ 
   70 000000A8 E155000B        CMP              R5,R11      ; newMin = R5 
   71 000000AC 8A000001        BHI              newMax      ;} 
   72 000000B0         newMin                               ;else if(R5>max)
   73 000000B0 E1A0A005        MOV              R10,R5      ;{
   74 000000B4 EA000000        B                endMin      ; newMax = R5
   75 000000B8         newMax                               ;}
   76 000000B8 E1A0B005        MOV              R11,R5
   77 000000BC         endMin
   78 000000BC         
   79 000000BC E04B700A        SUB              R7,R11,R10  ; Range
   80 000000C0         
   81 000000C0 E3A05000        MOV              R5,#0       ; clear the registe
                                                            rs to take new inpu
                                                            ts
   82 000000C4 E3A04000        MOV              R4,#0       ;
   83 000000C8 E3500020        CMP              R0,#0x20
   84 000000CC 0AFFFFDE        BEQ              secondSpace
   85 000000D0 EAFFFFD5        B                read
   86 000000D4         
   87 000000D4         meanDisplay
   88 000000D4 E3A04000        MOV              R4,#0       ;clear R4 for use a
                                                            s quotient
   89 000000D8 E1A05009        MOV              R5,R9       ;move sum into R5 
   90 000000DC E3A06064        MOV              R6,#100     ;
   91 000000E0 E0050596        MUL              R5,R6,R5    ;mean =*10;  //used
                                                             to compute average
                                                            
   92 000000E4         while                                ; 
   93 000000E4 E1550008        CMP              R5,R8       ;while (remainder >
                                                            = divisor)



ARM Macro Assembler    Page 3 


   94 000000E8 3A000002        BLO              endWhile    ;{
   95 000000EC E2844001        ADD              R4,R4,#1    ; quotient = quotie
                                                            nt +1
   96 000000F0 E0455008        SUB              R5,R5,R8    ; reaminder = remai
                                                            nder - divisor
   97 000000F4 EAFFFFFA        B                while       ;}
   98 000000F8         endWhile                             ;
   99 000000F8 E1A0C004        MOV              R12,R4      ; Move quotient to 
                                                            average
  100 000000FC         
  101 000000FC         
  102 000000FC E3A0000A        MOV              R0,#0xA     ; print(\n) // move
                                                            w to new line to di
                                                            splay mean 
  103 00000100 EBFFFFFE        BL               sendchar    ;
  104 00000104 E3A04001        MOV              R4,#1       ; result = 1
  105 00000108 E3A05000        MOV              R5,#0       ; clear register fo
                                                            r use in division
  106 0000010C E3A0600A        MOV              R6,#10      ; used to compute p
                                                            owers of ten
  107 00000110         powers
  108 00000110 E154000C        CMP              R4,R12      ;while(Mean > power
                                                            s)
  109 00000114 2A000001        BHS              endPowers   ;{
  110 00000118 E0040496        MUL              R4,R6,R4    ; result = result*x
                                                            
  111 0000011C EAFFFFFB        B                powers      ;}
  112 00000120         endPowers
  113 00000120         
  114 00000120         display
  115 00000120 E3540064        CMP              R4,#100     ;if(digit place == 
                                                            hundreds)
  116 00000124 1A000001        BNE              deci        ;{
  117 00000128 E3A0002E        MOV              R0,#0x2E    ; print(".") //deci
                                                            mal place
  118 0000012C EBFFFFFE        BL               sendchar    ;}
  119 00000130         deci                                 ;
  120 00000130 E3540001        CMP              R4,#1       ;if(digit place == 
                                                            ones)
  121 00000134 9A000014        BLS              endDisplay  ; end display
  122 00000138         divPower                             ;
  123 00000138 E354000A        CMP              R4,#10      ;while(remainder >=
                                                             10)
  124 0000013C 3A000002        BLO              endDivPower ;{
  125 00000140 E244400A        SUB              R4,R4,#10   ; remainder = remai
                                                            nder - 10;
  126 00000144 E2855001        ADD              R5,R5,#1    ; quotient = quotie
                                                            nt + 1;
  127 00000148 EAFFFFFA        B                divPower    ;}
  128 0000014C         endDivPower                          ;
  129 0000014C E3A06000        MOV              R6,#0       ; clear quotient re
                                                            gister
  130 00000150         whiMean                              ;
  131 00000150 E15C0005        CMP              R12,R5      ;while(mean >= divi
                                                            sor)
  132 00000154 3A000002        BLO              endWhiMean  ;{
  133 00000158 E2866001        ADD              R6,R6,#1    ;  quotient = quoti
                                                            ent + 1
  134 0000015C E04CC005        SUB              R12,R12,R5  ; mean = mean - div



ARM Macro Assembler    Page 4 


                                                            isor
  135 00000160 EAFFFFFA        B                whiMean     ;}
  136 00000164         endWhiMean                           ;
  137 00000164 E2866030        ADD              R6,R6,#0x30 ; convert digit to 
                                                            ascii code
  138 00000168 E1A00006        MOV              R0,R6       ; move to R0
  139 0000016C E3500030        CMP              R0,#0x30    ;if(ascii == 0)
  140 00000170 1A000001        BNE              noZero      ;{
  141 00000174 E3550001        CMP              R5,#1       ; if(divisor < 1) /
                                                            /eliminates leading
                                                             zeros
  142 00000178 3AFFFFE8        BLO              display     ;  don't print
  143 0000017C         noZero                               ;}
  144 0000017C EBFFFFFE        BL               sendchar    ;else
  145 00000180 E1A04005        MOV              R4,R5       ;{
  146 00000184 E3A05000        MOV              R5,#0       ; print digit
  147 00000188 EAFFFFE4        B                display     ;}
  148 0000018C         endDisplay                           ;
  149 0000018C E59F0008        LDR              R0,=mn      ; load string 
  150 00000190 EBFFFFFE        BL               fputs       ; output to console
                                                            
  151 00000194 EAFFFFFE 
                       stop    B                stop
  152 00000198         
  153 00000198 00000000 
              00000000         AREA             MyStrings, DATA, READONLY
  154 00000000         
  155 00000000 49 6E 70 
              75 74 20 
              76 61 6C 
              75 65 73 
              20 61 6E 
              64 20 70 
              72 65 73 
              73 20 73 
              70 61 63 
              65 20 74 
              6F 20 73 
              74 6F 72 
              65 20 69 
              74 2E 20 
              50 72 65 
              73 73 20 
              27 45 53 
              43 27 20 
              6B 65 79 
              20 74 6F 
              20 65 6E 
              64 20 70 
              72 6F 67 
              72 61 6D 
              2E 0D 0A 
              00       hi      DCB              "Input values and press space t
o store it. Press 'ESC' key to end program.\r\n",0
  156 0000004C 20 69 73 
              20 74 68 
              65 20 6D 
              65 61 6E 
              00       mn      DCB              " is the mean",0



ARM Macro Assembler    Page 5 


  157 00000059         
  158 00000059                 END
Command Line: --debug --xref --apcs=interwork --depend=.\displayresult.d -o.\di
splayresult.o -IC:\Keil\ARM\RV31\INC -IC:\Keil\ARM\CMSIS\Include -IC:\Keil\ARM\
Inc\Philips --predefine="__EVAL SETA 1" --predefine="__MICROLIB SETA 1" --prede
fine="NO_CLOCK_SETUP SETA 1" --predefine="NO_EMC_SETUP SETA 1" --predefine="RAM
_INTVEC SETA 1" --predefine="RAM_MODE SETA 1" --predefine="REMAP SETA 1" --list
=.\displayresult.lst DisplayResult.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

DisplayResult 00000000

Symbol: DisplayResult
   Definitions
      At line 2 in file DisplayResult.s
   Uses
      None
Comment: DisplayResult unused
deci 00000130

Symbol: deci
   Definitions
      At line 119 in file DisplayResult.s
   Uses
      At line 116 in file DisplayResult.s
Comment: deci used once
display 00000120

Symbol: display
   Definitions
      At line 114 in file DisplayResult.s
   Uses
      At line 142 in file DisplayResult.s
      At line 147 in file DisplayResult.s

divPower 00000138

Symbol: divPower
   Definitions
      At line 122 in file DisplayResult.s
   Uses
      At line 127 in file DisplayResult.s
Comment: divPower used once
endDisplay 0000018C

Symbol: endDisplay
   Definitions
      At line 148 in file DisplayResult.s
   Uses
      At line 121 in file DisplayResult.s
Comment: endDisplay used once
endDivPower 0000014C

Symbol: endDivPower
   Definitions
      At line 128 in file DisplayResult.s
   Uses
      At line 124 in file DisplayResult.s
Comment: endDivPower used once
endMin 000000BC

Symbol: endMin
   Definitions
      At line 77 in file DisplayResult.s
   Uses
      At line 74 in file DisplayResult.s
Comment: endMin used once
endPowers 00000120




ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

Symbol: endPowers
   Definitions
      At line 112 in file DisplayResult.s
   Uses
      At line 109 in file DisplayResult.s
Comment: endPowers used once
endWhiMean 00000164

Symbol: endWhiMean
   Definitions
      At line 136 in file DisplayResult.s
   Uses
      At line 132 in file DisplayResult.s
Comment: endWhiMean used once
endWhile 000000F8

Symbol: endWhile
   Definitions
      At line 98 in file DisplayResult.s
   Uses
      At line 94 in file DisplayResult.s
Comment: endWhile used once
meanDisplay 000000D4

Symbol: meanDisplay
   Definitions
      At line 87 in file DisplayResult.s
   Uses
      At line 39 in file DisplayResult.s
Comment: meanDisplay used once
newMax 000000B8

Symbol: newMax
   Definitions
      At line 75 in file DisplayResult.s
   Uses
      At line 71 in file DisplayResult.s
Comment: newMax used once
newMin 000000B0

Symbol: newMin
   Definitions
      At line 72 in file DisplayResult.s
   Uses
      At line 69 in file DisplayResult.s
Comment: newMin used once
noZero 0000017C

Symbol: noZero
   Definitions
      At line 143 in file DisplayResult.s
   Uses
      At line 140 in file DisplayResult.s
Comment: noZero used once
notFirst 000000A0

Symbol: notFirst
   Definitions
      At line 66 in file DisplayResult.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols

   Uses
      At line 63 in file DisplayResult.s
Comment: notFirst used once
powers 00000110

Symbol: powers
   Definitions
      At line 107 in file DisplayResult.s
   Uses
      At line 111 in file DisplayResult.s
Comment: powers used once
read 0000002C

Symbol: read
   Definitions
      At line 26 in file DisplayResult.s
   Uses
      At line 42 in file DisplayResult.s
      At line 44 in file DisplayResult.s
      At line 54 in file DisplayResult.s
      At line 85 in file DisplayResult.s

secondSpace 0000004C

Symbol: secondSpace
   Definitions
      At line 36 in file DisplayResult.s
   Uses
      At line 28 in file DisplayResult.s
      At line 84 in file DisplayResult.s

start 00000000

Symbol: start
   Definitions
      At line 10 in file DisplayResult.s
   Uses
      At line 7 in file DisplayResult.s
Comment: start used once
stop 00000194

Symbol: stop
   Definitions
      At line 151 in file DisplayResult.s
   Uses
      At line 151 in file DisplayResult.s
Comment: stop used once
storeNum 00000084

Symbol: storeNum
   Definitions
      At line 56 in file DisplayResult.s
   Uses
      At line 31 in file DisplayResult.s
      At line 33 in file DisplayResult.s

validInput 00000058

Symbol: validInput



ARM Macro Assembler    Page 4 Alphabetic symbol ordering
Relocatable symbols

   Definitions
      At line 40 in file DisplayResult.s
   Uses
      At line 34 in file DisplayResult.s
Comment: validInput used once
whiMean 00000150

Symbol: whiMean
   Definitions
      At line 130 in file DisplayResult.s
   Uses
      At line 135 in file DisplayResult.s
Comment: whiMean used once
while 000000E4

Symbol: while
   Definitions
      At line 92 in file DisplayResult.s
   Uses
      At line 97 in file DisplayResult.s
Comment: while used once
24 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

MyStrings 00000000

Symbol: MyStrings
   Definitions
      At line 153 in file DisplayResult.s
   Uses
      None
Comment: MyStrings unused
hi 00000000

Symbol: hi
   Definitions
      At line 155 in file DisplayResult.s
   Uses
      At line 12 in file DisplayResult.s
Comment: hi used once
mn 0000004C

Symbol: mn
   Definitions
      At line 156 in file DisplayResult.s
   Uses
      At line 149 in file DisplayResult.s
Comment: mn used once
3 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
External symbols

fputs 00000000

Symbol: fputs
   Definitions
      At line 6 in file DisplayResult.s
   Uses
      At line 13 in file DisplayResult.s
      At line 150 in file DisplayResult.s

getkey 00000000

Symbol: getkey
   Definitions
      At line 4 in file DisplayResult.s
   Uses
      At line 29 in file DisplayResult.s
      At line 37 in file DisplayResult.s

main 00000000

Symbol: main
   Definitions
      At line 3 in file DisplayResult.s
   Uses
      None
Comment: main unused
sendchar 00000000

Symbol: sendchar
   Definitions
      At line 5 in file DisplayResult.s
   Uses
      At line 45 in file DisplayResult.s
      At line 57 in file DisplayResult.s
      At line 103 in file DisplayResult.s
      At line 118 in file DisplayResult.s
      At line 144 in file DisplayResult.s

4 symbols
370 symbols in table
